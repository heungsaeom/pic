#define DHT11_PIN PIN_B4                // Connection pin between DHT11 and mcu
char i;
char nhietdo[10];
char doam[10];
short Time_out;
unsigned int8 T_byte1, T_byte2, RH_byte1, RH_byte2, CheckSum ;
void start_signal(){
  output_drive(DHT11_PIN);              // Configure connection pin as output
  output_low(DHT11_PIN);                // Connection pin output low
  delay_ms(25);
  output_high(DHT11_PIN);               // Connection pin output high
  delay_us(30);
  output_float(DHT11_PIN);              // Configure connection pin as input
}
short check_response(){
  delay_us(40);
  if(!input(DHT11_PIN)){                // Read and test if connection pin is low
    delay_us(80);
    if(input(DHT11_PIN)){               // Read and test if connection pin is high
      delay_us(50);
      return 1;
    }
  }
}
unsigned int8 Read_Data(){
  unsigned int8 i, k, _data = 0;        // k is used to count 1 bit reading duration
  if(Time_out)
    break;
  for(i = 0; i < 8; i++){
    k = 0;
    while(!input(DHT11_PIN)){           // Wait until DHT11 pin get raised
      k++;
      if(k > 100){
        Time_out = 1;
        break;
      }
      delay_us(1);
    }
    delay_us(30);
    if(!input(DHT11_PIN))
      bit_clear(_data, (7 - i));        // Clear bit (7 - i)
    else{
      bit_set(_data, (7 - i));          // Set bit (7 - i)
      while(input(DHT11_PIN)){          // Wait until DHT11 pin goes low
        k++;
        if(k > 100){
        Time_out = 1;
        break;
      }
      delay_us(1);}
    }
  }
  return _data;
}
unsigned int8 docnhietdo()
{
    Time_out = 0;
    Start_signal();
    if(check_response())
    {                     // If there is a response from sensor
      RH_byte1 = Read_Data();                 // read RH byte1
      RH_byte2 = Read_Data();                 // read RH byte2
      T_byte1 = Read_Data();                  // read T byte1
      T_byte2 = Read_Data();                  // read T byte2
      Checksum = Read_Data();                 // read checksum
      if(Time_out==0)
      {
       if(CheckSum == ((RH_Byte1 + RH_Byte2 + T_Byte1 + T_Byte2) & 0xFF)){
         nhietdo[0]  = T_Byte1/10  + 48;
         nhietdo[1]  = T_Byte1%10  + 48;
         return nhietdo;
       }
      }
    }
    
}

unsigned int8 docdoam()
{
    Time_out = 0;
    Start_signal();
    if(check_response())
    {                     // If there is a response from sensor
      RH_byte1 = Read_Data();                 // read RH byte1
      RH_byte2 = Read_Data();                 // read RH byte2
      T_byte1 = Read_Data();                  // read T byte1
      T_byte2 = Read_Data();                  // read T byte2
      Checksum = Read_Data();                 // read checksum
      if(Time_out==0)
      {
       if(CheckSum == ((RH_Byte1 + RH_Byte2 + T_Byte1 + T_Byte2) & 0xFF)){
         doam[0]  = RH_Byte1/10 + 48;
         doam[1]  = RH_Byte1%10 + 48;
         return doam;  
       }
      }
    }
}