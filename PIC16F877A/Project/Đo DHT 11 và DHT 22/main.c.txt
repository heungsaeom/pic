// DHT11 VS DHT22 CCS C code

//LCD module connections
#define LCD_RS_PIN PIN_D0
#define LCD_RW_PIN PIN_D1
#define LCD_ENABLE_PIN PIN_D2
#define LCD_DATA4 PIN_D3
#define LCD_DATA5 PIN_D4
#define LCD_DATA6 PIN_D5
#define LCD_DATA7 PIN_D6
//End LCD module connections

#include <16F877A.h>
#fuses HS,NOWDT,NOPROTECT,NOLVP                       
#use delay(clock = 8000000)
#include <lcd.c>
#use fast_io(B)
#define DHT11 PIN_B4                           // Connection pin between DHT11 and mcu
#define DHT22 PIN_B5                           // Connection pin between DHT22 and mcu

char message1[] = "DHT11 Temp = 00.0 C ";
char message2[] = "DHT11 RH   = 00.0 % ";
char message3[] = "DHT22 Temp = 00.0 C ";
char message4[] = "DHT22 RH   = 00.0 % ";
short Time_out;
unsigned int8 T_byte1, T_byte2, RH_byte1, RH_byte2, CheckSum ;
unsigned int16 Temp, RH;
void dht11_start_signal(){
  output_drive(DHT11);                        // Configure connection pin as output
  output_low(DHT11);                          // Connection pin output low
  delay_ms(25);
  output_high(DHT11);                         // Connection pin output high
  delay_us(30);
  output_float(DHT11);                        // Configure connection pin as input
}
short dht11_check_response(){
  delay_us(40);
  if(!input(DHT11)){                          // Read and test if connection pin is low
    delay_us(80);
    if(input(DHT11)){                         // Read and test if connection pin is high
      delay_us(50);
      return 1;
    }
  }
}
unsigned int8 dht11_Read_Data(){
  unsigned int8 i, k, _data = 0;        // k is used to count 1 bit reading duration
  if(Time_out)
    break;
  for(i = 0; i < 8; i++){
    k = 0;
    while(!input(dht11)){                            // Wait for DHT22 pin to go high
      k++;
      if(k > 100){
        Time_out = 1;
        break;
      }
      delay_us(1);
    }
    delay_us(30);
    if(!input(dht11))
      bit_clear(_data, (7 - i));                     // Clear bit (7 - i)
    else{
      bit_set(_data, (7 - i));                       // Set bit (7 - i)
      while(input(dht11)){                           // Wait for DHT22 pin to go low
        k++;
        if(k > 100){
        Time_out = 1;
        break;
      }
      delay_us(1);}
    }
  }
  return _data;
}
void dht22_start_signal(){
  output_drive(DHT22);                        // Configure connection pin as output
  output_low(DHT22);                          // Connection pin output low
  delay_ms(25);
  output_high(DHT22);                         // Connection pin output high
  delay_us(30);
  output_float(DHT22);                        // Configure connection pin as input
}
short dht22_check_response(){
  delay_us(40);
  if(!input(DHT22)){                          // Read and test if connection pin is low
    delay_us(80);
    if(input(DHT22)){                         // Read and test if connection pin is high
      delay_us(50);
      return 1;
    }
  }
}
unsigned int8 dht22_Read_Data(){
  unsigned int8 i, k, _data = 0;                // k is used to count 1 bit reading duration
  if(Time_out)
    break;
  for(i = 0; i < 8; i++){
    k = 0;
    while(!input_state(dht22)){                      // Wait for DHT22 pin to go high
      k++;
      if(k > 100){
        Time_out = 1;
        break;
      }
      delay_us(1);
    }
    delay_us(30);
    if(!input_state(dht22))
      bit_clear(_data, (7 - i));                     // Clear bit (7 - i)
    else{
      bit_set(_data, (7 - i));                       // Set bit (7 - i)
      while(input_state(dht22)){                     // Wait for DHT22 pin to go low
        k++;
        if(k > 100){
        Time_out = 1;
        break;
      }
      delay_us(1);}
    }
  }
  return _data;
}
void main(){
  lcd_init();                                        // Initialize LCD module
  lcd_putc('\f');                                    // LCD clear
  delay_ms(1000);
  while(TRUE){
    Time_out = 0;
    dht11_Start_signal();
    if(dht11_check_response()){                // If there is a response from dht11 sensor
      RH_byte1 = dht11_Read_Data();                  // read RH byte1
      RH_byte2 = dht11_Read_Data();                  // read RH byte2
      T_byte1 = dht11_Read_Data();                   // read T byte1
      T_byte2 = dht11_Read_Data();                   // read T byte2
      Checksum = dht11_Read_Data();                  // read checksum
      if(Time_out){                                  // If reading takes long time
        lcd_gotoxy(1, 1);                            // Go to column 1 row 1
        lcd_putc("  DHT11 Time out!   ");
        lcd_gotoxy(1, 2);                            // Go to column 1 row 1
        lcd_putc("                    ");            // Clear second row
      }
      else{
       if(CheckSum == ((RH_Byte1 + RH_Byte2 + T_Byte1 + T_Byte2) & 0xFF)){
         message1[13]  = T_Byte1/10  + 48;
         message1[14]  = T_Byte1%10  + 48;
         message1[16] = T_Byte2/10  + 48;
         message2[13]  = RH_Byte1/10 + 48;
         message2[14]  = RH_Byte1%10 + 48;
         message2[16] = RH_Byte2/10 + 48;
         message1[17] = 223;                         // Degree symbol
         lcd_gotoxy(1, 1);                           // Go to column 1 row 1
         printf(lcd_putc, message1);                 // Display message1
         lcd_gotoxy(1, 2);                           // Go to column 1 row 2
         printf(lcd_putc, message2);                 // Display message2
       }
       else{
         lcd_gotoxy(1, 1);                           // Go to column 1 row 1
         lcd_putc("DHT11 Checksum Error");
         lcd_gotoxy(1, 2);                           // Go to column 1 row 2
         lcd_putc("                    ");           // Clear second row
       }
      }
    }
    else {                                     // If dht11 sensor don't respond
      lcd_gotoxy(1, 1);                              // Go to column 1 row 1
      lcd_putc("    No response     ");
      lcd_gotoxy(1, 2);                              // Go to column 1 row 2
      lcd_putc(" from DHT11 sensor  ");
    }
    Time_out = 0;
    dht22_Start_signal();
    if(dht22_check_response()){                       // If there is a response from sensor
      RH_byte1 = dht22_Read_Data();                  // read RH byte1
      RH_byte2 = dht22_Read_Data();                  // read RH byte2
      T_byte1 = dht22_Read_Data();                   // read T byte1
      T_byte2 = dht22_Read_Data();                   // read T byte2
      Checksum = dht22_Read_Data();                  // read checksum
      if(Time_out){                                  // If reading takes long time
        lcd_gotoxy(21, 1);                           // Go to column 1 row 1
        lcd_putc("  DHT22 Time out!   ");
        lcd_gotoxy(21, 2);                           // Go to column 1 row 4
        lcd_putc("                    ");            // Clear fourth row
      }
      else{
       if(CheckSum == ((RH_Byte1 + RH_Byte2 + T_Byte1 + T_Byte2) & 0xFF)){
         RH = RH_byte1;
         RH = (RH << 8) | RH_byte2;
         Temp = T_byte1;
         Temp = (Temp << 8) | T_byte2;
         if(Temp > 0X8000){
           message3[12] = '-';
           Temp = Temp & 0X7FFF; }
         else
          message3[12] = ' ';
         message3[13]  = (Temp / 100) % 10  + 48;
         message3[14]  = (Temp / 10) % 10  + 48;
         message3[16] = Temp % 10  + 48;
         message4[13]  = (RH / 100) % 10 + 48;
         message4[14]  = (RH / 10) % 10 + 48;
         message4[16] = RH % 10 + 48;
         message3[17] = 223;                         // Degree symbol
         lcd_gotoxy(21, 1);                          // Go to column 1 row 3
         printf(lcd_putc, message3);                 // Display message3
         lcd_gotoxy(21, 2);                          // Go to column 1 row 4
         printf(lcd_putc, message4);                 // Display message4
       }
       else{
         lcd_gotoxy(21, 1);                          // Go to column 1 row 3
         lcd_putc("DHT22 Checksum Error");
         lcd_gotoxy(21, 2);                          // Go to column 1 row 4
         lcd_putc("                    ");           // Clear fourth row
       }
      }
    }
    else {                                       // If dht22 sensor don't respond
      lcd_gotoxy(21, 1);                             // Go to column 1 row 3
      lcd_putc("    No response     ");
      lcd_gotoxy(21, 2);                             // Go to column 1 row 4
      lcd_putc(" from DHT22 sensor  ");
    }
  delay_ms(1000);
  }
}   // End of program