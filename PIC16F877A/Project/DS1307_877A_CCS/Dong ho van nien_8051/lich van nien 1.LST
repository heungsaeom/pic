C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LICH_VAN_NIEN_1
OBJECT MODULE PLACED IN lich van nien 1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lich van nien 1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REGX52.H>
   2          
   3          #define SEC     0x00
   4          #define MIN     0x01
   5          #define HOUR    0x02
   6          #define DAY     0x03
   7          #define DATE    0x04
   8          #define MONTH   0x05
   9          #define YEAR    0x06
  10          #define CONTROL 0x07
  11          #define A_MIN   0x08
  12          #define A_HOUR  0x09
  13          #define A_MIN1  0x0A
  14          #define A_HOUR1 0x0B
  15          #define ON_OFF  0x0C
  16          #define ON_OFF1 0x0D
  17          
  18          char DATEAL,MONTHAL,YEARAL,sec,hour,min,day,date,month,year,year_20,yearal_20,a_min,a_hour,a_min1,a_hour1;
  19          
  20          sbit SDA   = P1^0;
  21          sbit SCL   = P1^1;
  22          sbit Set   = P1^2;
  23          sbit Up    = P1^3;
  24          sbit Down  = P1^4;
  25          sbit Ok    = P1^5;
  26          sbit Alarm = P1^6;
  27          sbit Loa   = P1^7;
  28          sbit E11   = P3^0;
  29          sbit E12   = P3^1;
  30          sbit AM    = P3^2;
  31          sbit PM    = P3^3;
  32          //******************************************************************************
  33          // KHAI BAO BIEN, MANG... 
  34          unsigned char led7_data[11] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x39}; //Decimal to Led7s
             -eg
  35          unsigned char Data,Display,time,index,set,bat_nhay,read_time;
  36          unsigned char AM_PM,alarm,alarm1,on_off,on_off1;
  37          //,,,,,,,,,,,,,,,,,,,,KHAI BAO MANG AM DUONG LICH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
  38          unsigned char code DL2010[48]={17,11,15,12,18,12,14,1,16,1,16,2,17,2,14,3,18,3,14,4,19,4,12,5,
  39                                         20,5,12,6,21,6,10,7,23,7,8,8,24,8,8,9,25,9,6,10,26,10,6,11};
  40          unsigned char code DL2011[48]={27,11,4,12,19,12,3,1,27,1,5,2,28,2,3,3,29,3,3,4,30,4,2,5,
  41                                         1,6,31,7,2,7,29,8,4,8,27,9,5,9,27,10,6,10,25,11,7,11,25,12};
  42          unsigned char code DL2012[48]={8,12,23,1,10,1,22,2,9,2,22,3,11,3,21,4,11,4,21,4,12,4,19,5,       
  43                                                             13,5,19,6,14,6,17,7,16,7,16,8,16,8,15,9,18,9,14,10,18,10,13,11};   
  44          unsigned char code DL2013[48]={20,11,12,12,21,12,10,1,20,1,12,2,21,2,10,3,22,3,10,4,23,4,8,5,
  45                                                                     24,5,8,6,25,6,7,7,26,7,5,8,27,8,5,9,28,9,3,10,29,10,3,11};
  46          unsigned char code DL2014[48]={1,12,31,1,2,1,30,2,1,2,31,3,2,3,29,4,3,4,29,5,4,5,27,6,
  47                                         5,6,27,7,6,7,25,8,8,8,24,9,8,9,24,9,9,9,22,10,10,10,22,11};
  48          unsigned char code DL2015[48]={11,11,20,12,13,12,19,1,11,1,20,2,13,2,19,3,13,3,18,4,15,4,16,5,
  49                                         16,5,16,6,17,6,14,7,19,7,13,8,19,8,13,9,20,9,12,10,20,10,11,11};
  50          unsigned char code DL2016[48]={22,11,10,12,23,12,8,1,23,1,9,2,24,2,7,3,25,3,7,4,26,4,5,5,
  51                                         27,5,4,6,29,6,3,7,1,8,31,9,3,11,29,12,1,9,31,10,2,10,29,11};
  52          unsigned char code DL2017[48]={4,12,28,1,5,1,26,2,4,2,28,3,5,3,26,4,6,4,26,5,7,5,24,6,
  53                                         8,6,23,6,10,6,22,7,11,7,20,8,12,8,20,9,13,9,18,10,14,10,18,11};
  54          unsigned char code DL2018[48]={15,11,17,12,16,12,16,1,14,1,17,2,16,2,16,3,16,3,15,4,18,4,14,5,
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 2   

  55                                         18,5,13,6,20,6,11,7,22,7,10,8,22,8,9,9,24,9,7,10,25,10,7,11};
  56          unsigned char code DL2019[48]={26,11,6,12,27,12,5,1,25,1,6,2,27,2,5,3,27,3,5,4,28,4,3,5,
  57                                         29,5,3,6,1,7,30,8,3,8,29,9,3,9,28,10,5,10,26,11,6,11,26,12};
  58          unsigned char code DL2020[48]={7,12,25,1,8,1,23,2,8,2,24,3,9,3,23,4,9,4,23,4,10,4,21,5,
  59                                         11,5,21,6,12,6,19,7,14,7,17,8,15,8,17,9,16,9,15,10,17,10,14,11};
  60          
  61          // KHAI BAO HAM, CHUONG TRINH CON
  62          void set_main(void);                    // Chuong trinh khoi tao main
  63          void setup_timer(void);                 // Chuong trinh cai dat timer 1 va 0
  64          void delay(unsigned int time);  // Delay
  65          void Set_Clock(void);                   // Kiem tra va hieu chinh gia tri cua gio,phut,giay
  66          void Keypad(void);                              // Kiem tra xu ly phim nhan.
  67          void T1_ISR(void);                              //ngat timer 1 phuc vu nhay led
  68          void T0_ISR(void);                              // Dung ngat timer 0 de quet led
  69          unsigned char DATE_AL(unsigned char date, unsigned char month, unsigned char year);
  70          unsigned char MONTH_AL(unsigned char date, unsigned char month, unsigned char year);
  71          unsigned char YEAR_AL(unsigned char MONTHAL, unsigned char month);
  72          //******************************************************************************
  73          //*************************CAC CHUONG TRINH TINH AM LICH**************************
  74          unsigned char DATE_AL(unsigned char date, unsigned char month, unsigned char year)
  75          {  
  76   1         unsigned char n,i;
  77   1         i=month-1;
  78   1         if (year==10)
  79   1           {  if (date<DL2010[2+(4*i)]) n=(DL2010[4*i]+date)-1;
  80   2             else if (date>DL2010[2+(4*i)]) n=(date-DL2010[2+(4*i)])+1;
  81   2             else n=1; }
  82   1         else if (year==11)
  83   1           {  if (date<DL2011[2+(4*i)]) n=(DL2011[4*i]+date)-1;
  84   2             else if (date>DL2011[2+(4*i)]) n=(date-DL2011[2+(4*i)])+1;
  85   2             else n=1; }
  86   1         else if (year==11)
  87   1           {  if (date<DL2011[2+(4*i)]) n=(DL2011[4*i]+date)-1;
  88   2             else if (date>DL2011[2+(4*i)]) n=(date-DL2011[2+(4*i)])+1;
  89   2             else n=1; }
  90   1         else if (year==12)
  91   1           {  if (date<DL2012[2+(4*i)]) n=(DL2012[4*i]+date)-1;
  92   2             else if (date>DL2012[2+(4*i)]) n=(date-DL2012[2+(4*i)])+1;
  93   2             else n=1; }
  94   1         else if (year==13)
  95   1           {  if (date<DL2013[2+(4*i)]) n=(DL2013[4*i]+date)-1;
  96   2             else if (date>DL2013[2+(4*i)]) n=(date-DL2013[2+(4*i)])+1;
  97   2             else n=1; }
  98   1         else if (year==14)
  99   1           {  if (date<DL2014[2+(4*i)]) n=(DL2014[4*i]+date)-1;
 100   2             else if (date>DL2014[2+(4*i)]) n=(date-DL2014[2+(4*i)])+1;
 101   2             else n=1; }
 102   1         else if (year==15)
 103   1           {  if (date<DL2015[2+(4*i)]) n=(DL2015[4*i]+date)-1;
 104   2             else if (date>DL2015[2+(4*i)]) n=(date-DL2015[2+(4*i)])+1;
 105   2             else n=1; }
 106   1         else if (year==16)
 107   1           {  if (date<DL2016[2+(4*i)]) n=(DL2016[4*i]+date)-1;
 108   2             else if (date>DL2016[2+(4*i)]) n=(date-DL2016[2+(4*i)])+1;
 109   2             else n=1; }
 110   1         else if (year==17)
 111   1           {  if (date<DL2017[2+(4*i)]) n=(DL2017[4*i]+date)-1;
 112   2             else if (date>DL2017[2+(4*i)]) n=(date-DL2017[2+(4*i)])+1;
 113   2             else n=1; }
 114   1         else if (year==19)
 115   1           {  if (date<DL2019[2+(4*i)]) n=(DL2019[4*i]+date)-1;
 116   2             else if (date>DL2019[2+(4*i)]) n=(date-DL2019[2+(4*i)])+1;
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 3   

 117   2             else n=1; }
 118   1         else if (year==20)
 119   1           {  if (date<DL2020[2+(4*i)]) n=(DL2020[4*i]+date)-1;
 120   2             else if (date>DL2020[2+(4*i)]) n=(date-DL2020[2+(4*i)])+1;
 121   2             else n=1; }
 122   1         return n;
 123   1         }
 124           unsigned char MONTH_AL(unsigned char date, unsigned char month, unsigned char year)
 125           {
 126   1         unsigned char n,i;
 127   1         i=month-1;
 128   1         if (year==10)
 129   1                {    if (date<DL2010[2+(4*i)]) n=DL2010[1+(4*i)];
 130   2                else  n=DL2010[3+(4*i)]; }
 131   1         else if (year==11)
 132   1                {    if (date<DL2011[2+(4*i)]) n=DL2011[1+(4*i)];
 133   2                else  n=DL2011[3+(4*i)]; }
 134   1         else if (year==12)
 135   1                {    if (date<DL2012[2+(4*i)]) n=DL2012[1+(4*i)];
 136   2                else  n=DL2012[3+(4*i)]; }
 137   1         else if (year==13)
 138   1                {    if (date<DL2013[2+(4*i)]) n=DL2013[1+(4*i)];
 139   2                else  n=DL2013[3+(4*i)]; }
 140   1         else if (year==14)
 141   1                {    if (date<DL2014[2+(4*i)]) n=DL2014[1+(4*i)];
 142   2                else  n=DL2014[3+(4*i)]; }
 143   1         else if (year==15)
 144   1                {    if (date<DL2015[2+(4*i)]) n=DL2015[1+(4*i)];
 145   2                else  n=DL2015[3+(4*i)]; }
 146   1         else if (year==16)
 147   1                {    if (date<DL2016[2+(4*i)]) n=DL2016[1+(4*i)];
 148   2                else  n=DL2016[3+(4*i)]; }
 149   1         else if (year==17)
 150   1                {    if (date<DL2017[2+(4*i)]) n=DL2017[1+(4*i)];
 151   2                else  n=DL2017[3+(4*i)]; }
 152   1         else if (year==18)
 153   1                {    if (date<DL2018[2+(4*i)]) n=DL2018[1+(4*i)];
 154   2                else  n=DL2018[3+(4*i)]; }
 155   1         else if (year==19)
 156   1                {    if (date<DL2019[2+(4*i)]) n=DL2019[1+(4*i)];
 157   2                else  n=DL2019[3+(4*i)]; }
 158   1         else if (year==20)
 159   1                {    if (date<DL2020[2+(4*i)]) n=DL2020[1+(4*i)];
 160   2                else  n=DL2020[3+(4*i)]; }
 161   1              return n;
 162   1         }
 163          unsigned char YEAR_AL(unsigned char MONTHAL, unsigned char month)
 164          {
 165   1      unsigned n;
 166   1      if (MONTHAL<=month) n=year;
 167   1      else if (MONTHAL>month) n=year-1;
 168   1      return n;
 169   1      }
 170          void bip(void)
 171          {
 172   1              unsigned char n;
 173   1          for(n=0;n<100;n++)
 174   1          {
 175   2                      Loa=1; delay(50);
 176   2              Loa=0; delay(50);
 177   2          }    
 178   1      }
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 4   

 179          //******************************************************************************
 180          // CAC CHUONG TRINH CON CHO I2C
 181          //******************************************************************************
 182          void I2C_start(void)
 183          {
 184   1              SCL = 1; SCL = 0;
 185   1              SDA = 1; SCL = 1;
 186   1              delay(2);
 187   1              SDA = 0; delay(2);
 188   1              SCL = 0; delay(2);
 189   1      }
 190          void I2C_stop(void)
 191          {
 192   1              SCL = 1; SCL = 0;
 193   1              SDA = 0; delay(2);
 194   1              SCL = 1; delay(2);
 195   1              SDA = 1;
 196   1      }
 197          void I2C_write(unsigned char dat)
 198          {
 199   1              unsigned char i;
 200   1              for (i=0;i<8;i++)
 201   1              {
 202   2                      SDA = (dat & 0x80) ? 1:0;
 203   2                      SCL=1;SCL=0;
 204   2                      dat<<=1;
 205   2              }
 206   1              SCL = 1; delay(2);
 207   1              SCL = 0;
 208   1      }
 209          unsigned char I2C_read(void)
 210          {
 211   1              bit rd_bit;
 212   1              unsigned char i, dat;
 213   1              dat = 0x00;
 214   1              for(i=0;i<8;i++)                /* For loop read data 1 byte */
 215   1              {
 216   2                      delay(2);
 217   2                      SCL = 1; delay(2);      /* Set SCL */
 218   2                      rd_bit = SDA;           /* Keep for check acknowledge */
 219   2                      dat = dat<<1;
 220   2                      dat = dat | rd_bit; /* Keep bit data in dat */
 221   2                      SCL = 0;                        /* Clear SCL */
 222   2              }
 223   1              return dat;
 224   1      }
 225          //******************************************************************************
 226          // CAC CHUONG TRINH CON CHO DS1307
 227          //******************************************************************************
 228          unsigned char DS1307_read(unsigned char addr)
 229          {
 230   1              unsigned int temp,ret;
 231   1              I2C_start();            /* Start i2c bus */
 232   1              I2C_write(0xD0);        /* Connect to DS1307 */
 233   1              I2C_write(addr);        /* Request RAM address on DS1307 */
 234   1              I2C_start();            /* Start i2c bus */
 235   1              I2C_write(0XD1);        /* Connect to DS1307 for Read */
 236   1              ret = I2C_read();       /* Receive data */
 237   1              I2C_stop();
 238   1              //**********************************************************
 239   1              temp = ret;                                                     /*BCD to HEX*/
 240   1              ret = (((ret/16)*10)+ (temp & 0x0f));   /*for Led 7seg*/
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 5   

 241   1              //**********************************************************
 242   1              return ret;
 243   1      }
 244          
 245          void DS1307_Write(unsigned char addr,unsigned char dat)
 246          {
 247   1              unsigned int temp;
 248   1              //********************************************** 
 249   1              temp = dat ;                                            /*HEX to BCD*/
 250   1              dat = (((dat/10)*16)|(temp %10));       /*for Led 7seg*/
 251   1              //**********************************************
 252   1              I2C_start();            /* Start i2c bus */
 253   1              I2C_write(0XD0);        /* Connect to DS1307 */
 254   1              I2C_write(addr);        /* Request RAM address on DS1307 */
 255   1              I2C_write(dat);         /* Connect to DS1307 for Read */
 256   1              I2C_stop();
 257   1      }
 258          
 259          void Out_1Hz()
 260          {
 261   1              I2C_start(); /* Start i2c bus */
 262   1              I2C_write(0xD0); /* Connect to DS1307 */
 263   1              I2C_write(CONTROL);   //vi tri con tro RTC
 264   1              I2C_write(0x10);
 265   1              I2C_stop();
 266   1      }
 267          
 268          void Read_DS1307()
 269          {
 270   1              sec   = DS1307_read(SEC);
 271   1              min   = DS1307_read(MIN);
 272   1              hour  = DS1307_read(HOUR);
 273   1              day   = DS1307_read(DAY);
 274   1              date  = DS1307_read(DATE);
 275   1              month = DS1307_read(MONTH);
 276   1              year  = DS1307_read(YEAR);
 277   1      }
 278          
 279          void Write_DS1307()
 280          {
 281   1              DS1307_Write(SEC,sec);
 282   1              DS1307_Write(MIN,min);
 283   1              DS1307_Write(HOUR,hour);
 284   1              DS1307_Write(DAY,day);
 285   1              DS1307_Write(DATE,date);
 286   1              DS1307_Write(MONTH,month);
 287   1              DS1307_Write(YEAR,year); 
 288   1      }
 289          
 290          void Write_Alarm()
 291          {
 292   1              DS1307_Write(A_MIN,a_min);
 293   1              DS1307_Write(A_HOUR,a_hour);
 294   1              DS1307_Write(ON_OFF,on_off);
 295   1      }
 296          void Write_Alarm1()
 297          {
 298   1              DS1307_Write(A_MIN1,a_min1);
 299   1              DS1307_Write(A_HOUR1,a_hour1);
 300   1              DS1307_Write(ON_OFF1,on_off1);
 301   1      }
 302          void Read_Alarm()
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 6   

 303          {
 304   1          a_min   = DS1307_read(A_MIN);
 305   1              a_hour  = DS1307_read(A_HOUR);
 306   1              a_min1  = DS1307_read(A_MIN1);
 307   1              a_hour1 = DS1307_read(A_HOUR1);
 308   1              on_off  = DS1307_read(ON_OFF);
 309   1              on_off1 = DS1307_read(ON_OFF1);
 310   1      }
 311          //******************************************************************************
 312          void delay(unsigned int time)
 313          { 
 314   1              while(time--); 
 315   1      }
 316          void set_main(void) // Chuong trinh khoi tao main
 317          { 
 318   1              P2=P1=0xFF;P1_7=0;
 319   1              P0=P3=0x00;
 320   1      }
 321          void setup_timer(void) // Setup timer 0 va timer 1
 322          {
 323   1              TMOD=0x11; // timer0 & timer1 set che do 1
 324   1              ET1=1; ET0=1; EA=1;
 325   1              TF0=0; TF1=0; 
 326   1              TR0=1; TR1=1;
 327   1      }
 328          void Set_Clock(void) // Kiem tra va hieu chinh gia tri cua gio,phut,giay
 329          {
 330   1              unsigned char y;
 331   1              y=(year%4);
 332   1      //Tang
 333   1              if(min>59)  { min=0; }
 334   1              if(hour>23) { hour=0; }
 335   1              if(day>7) day=1;
 336   1              if((month==2)&&(date>29)&&(y==0)) { date=1; }
 337   1              else    if((month==2)&&(date>28)&&(y!=0)) { date=1; }
 338   1                              else    if(((month==4)||(month==6)||(month==9)||(month==11))&&(date>30)&&(y!=0)){ date=1; }
 339   1                                              else    if(date>31) { date=1; }
 340   1              if(month>12)  { month=1; }
 341   1              if(year>99)   { year_20++; year=0; if(year_20>99){year_20=0;}  }
 342   1              if(a_min>59)  { a_min=0; }
 343   1              if(a_hour>23) { a_hour=0; }
 344   1              if(a_min1>59) { a_min1=0; }
 345   1              if(a_hour1>23){ a_hour1=0; }
 346   1      //Giam
 347   1              if(min<0)  { min=59; }
 348   1              if(hour<0) { hour=23; }
 349   1              if(day<1) day=7;
 350   1              if((month==2)&&(date<1)&&(y==0)) { date=29; }
 351   1              else    if((month==2)&&(date<1)&&(y!=0)) { date=28; }
 352   1                              else    if(((month==4)||(month==6)||(month==9)||(month==11))&&(date<1)&&(y!=0)){ date=30; }
 353   1                                              else    if(date<1) { date=31; }
 354   1              if(month<1)   { month=12; }
 355   1              if(year<0)    { year_20--; year=99; if(year_20<0){year_20=99;} }
 356   1              if(a_min<0)   { a_min=59; }
 357   1              if(a_hour<0)  { a_hour=23; }
 358   1              if(a_min1<0)  { a_min1=59; }
 359   1              if(a_hour1<0) { a_hour1=23; }
 360   1      }
 361          void Keypad(void) // Kiem tra phim nhan.
 362          {
 363   1              if(Ok==0)
 364   1              {       delay(1000);
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 7   

 365   2                  while(Ok==0);
 366   2              delay(1000);
 367   2                      if((Display==0)&&(set==0)&&(alarm==0)&&(alarm1==0))
 368   2                      {
 369   3                              AM_PM++;
 370   3                              if(AM_PM==2) AM_PM=0;
 371   3                      }
 372   2                      else AM_PM=0;
 373   2                      bip(); 
 374   2                      Display=set=alarm=alarm1=0;
 375   2                      if(on_off==1) Write_Alarm();    
 376   2                      else Write_DS1307();    
 377   2                      if(on_off1==1) Write_Alarm1();  
 378   2                      else Write_DS1307();
 379   2              }
 380   1      
 381   1      //*********************************************************************
 382   1              if(Display==0)
 383   1              {
 384   2                      if(Set==0)
 385   2                      {       delay(1000);
 386   3                  while(Set==0);
 387   3                  delay(1000);
 388   3                              bip(); set++; 
 389   3                              if(set==7) set=1;
 390   3                      }
 391   2                      if((set==1)&&(Display==0))
 392   2                      { 
 393   3                              if(!Up) { min++; bip();Set_Clock(); delay(50000); }
 394   3                              if(!Down) { min--; bip();Set_Clock(); delay(50000); }
 395   3                      }
 396   2                      if(set==2)
 397   2                      { 
 398   3                              if(!Up) 
 399   3                              {
 400   4                                      hour=hour+1; bip();Set_Clock(); delay(50000);
 401   4                              }
 402   3                              if(!Down) 
 403   3                              {       
 404   4                                      hour=hour-1; bip();Set_Clock(); delay(50000);
 405   4                              }
 406   3                      }
 407   2                      if(set==3)
 408   2                      { 
 409   3                              if(!Up) 
 410   3                              {
 411   4                                      day=day+1; bip();Set_Clock(); delay(50000);
 412   4                              }
 413   3                              if(!Down) 
 414   3                              {       
 415   4                                      day=day-1; bip();Set_Clock(); delay(50000);
 416   4                              }
 417   3                      }
 418   2                      if(set==4)
 419   2                      { 
 420   3                              if(!Up) 
 421   3                              {
 422   4                                      date=date+1; bip();Set_Clock(); delay(50000);
 423   4                              }
 424   3                              if(!Down) 
 425   3                              {       
 426   4                                      date=date-1; bip();Set_Clock(); delay(50000);
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 8   

 427   4                              }
 428   3                      }
 429   2                      if(set==5)
 430   2                      { 
 431   3                              if(!Up) 
 432   3                              {
 433   4                                      month=month+1; bip();Set_Clock(); delay(50000);
 434   4                              }
 435   3                              if(!Down) 
 436   3                              {       
 437   4                                      month=month-1; bip();Set_Clock(); delay(50000);
 438   4                              }
 439   3                      }
 440   2                      if(set==6)
 441   2                      { 
 442   3                              if(!Up) 
 443   3                              {
 444   4                                      year=year+1; bip();Set_Clock(); delay(50000);
 445   4                              }
 446   3                              if(!Down) 
 447   3                              {       
 448   4                                      year=year-1; bip();Set_Clock(); delay(50000);
 449   4                              }
 450   3                      }
 451   2              }
 452   1              if(Alarm==0)
 453   1              {  delay(1000);
 454   2             while(Alarm==0);
 455   2             delay(1000);
 456   2                      bip(); Display++;
 457   2                      if(Display==3) Display=1;
 458   2              }
 459   1              if(Display==1)
 460   1              {
 461   2                      if(!Set)
 462   2                      { 
 463   3                              bip(); alarm++; 
 464   3                              if(alarm==4) alarm=1;
 465   3                      }
 466   2                      if(alarm==1)
 467   2                      { 
 468   3                              if(!Up) //min++; 
 469   3                              {
 470   4                                      a_min=a_min+1; bip();Set_Clock(); delay(50000);
 471   4                              }
 472   3                              if(!Down) //min--;
 473   3                              {
 474   4                                      a_min=a_min-1; bip();Set_Clock(); delay(50000);
 475   4                              }
 476   3                      }
 477   2                      if(alarm==2)
 478   2                      { 
 479   3                              if(!Up) //hour++;
 480   3                              {
 481   4                                      a_hour=a_hour+1; bip();Set_Clock(); delay(50000);
 482   4                              }
 483   3                              if(!Down) //hour--;
 484   3                              {       
 485   4                                      a_hour=a_hour-1; bip();Set_Clock(); delay(50000);
 486   4                              }
 487   3                      }
 488   2                      if(alarm==3)
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 9   

 489   2                      { 
 490   3                              if(!Up) //hour++;
 491   3                              {
 492   4                                      on_off=1; bip();Set_Clock(); delay(50000); 
 493   4                              }
 494   3                              if(!Down) //hour--;
 495   3                              {       
 496   4                                      on_off=0; bip();Set_Clock(); delay(50000);
 497   4                              }
 498   3                      }
 499   2              }
 500   1              if(Display==2)
 501   1              {
 502   2                      if(!Set)
 503   2                      { 
 504   3                              bip(); alarm1++; 
 505   3                              if(alarm1==4) alarm1=1;
 506   3                      }
 507   2                      if(alarm1==1)
 508   2                      { 
 509   3                              if(!Up) 
 510   3                              {
 511   4                                      a_min1=a_min1+1; bip();Set_Clock(); delay(50000);
 512   4                              }
 513   3                              if(!Down) 
 514   3                              {
 515   4                                      a_min1=a_min1-1; bip();Set_Clock(); delay(50000);
 516   4                              }
 517   3                      }
 518   2                      if(alarm1==2)
 519   2                      { 
 520   3                              if(!Up) 
 521   3                              {
 522   4                                      a_hour1=a_hour1+1; bip();Set_Clock(); delay(50000);
 523   4                              }
 524   3                              if(!Down) 
 525   3                              {       
 526   4                                      a_hour1=a_hour1-1; bip();Set_Clock(); delay(50000);
 527   4                              }
 528   3                      }
 529   2                      if(alarm1==3)
 530   2                      { 
 531   3                              if(!Up) 
 532   3                              {
 533   4                                      on_off1=1; bip();Set_Clock(); delay(50000); 
 534   4                              }
 535   3                              if(!Down) 
 536   3                              {       
 537   4                                      on_off1=0; bip();Set_Clock(); delay(50000);
 538   4                              }
 539   3                      }
 540   2      }
 541   1      
 542   1      
 543   1      //*********************************************************************
 544   1              Set_Clock(); 
 545   1              delay(1000);
 546   1      }
 547          void T0_ISR(void) interrupt 1 // Dung ngat Timer0 de doc DS1307
 548          {
 549   1              TR0=0;
 550   1              TF0=0;
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 10  

 551   1              TH0=-20000/256; // Gia tri cho Timer0: 50000(us)x10=0.5(s)
 552   1              TL0=-20000%256;
 553   1              time++;
 554   1              if(time==10)
 555   1              {
 556   2                      time=0; bat_nhay++; read_time=1;
 557   2                      if(bat_nhay==4) bat_nhay=0;      // chop tat khi dieu chinh Clock
 558   2              }
 559   1              TR0=1;
 560   1      }
 561          /*************************************/
 562          void T1_ISR(void) interrupt 3 // Dung ngat Timer1 de hien thi 15 Led_7D
 563          {
 564   1              TR1=0;
 565   1              TF1=0;
 566   1              TH1=-1000/256; // Gia tri cho Timer1: 1000(us) x 15 = 15(ms)
 567   1              TL1=-1000%256;
 568   1              if(Display==0)
 569   1              {
 570   2                      index++;
 571   2                      if(index==1)
 572   2                      {
 573   3                              Data=sec;
 574   3                              P0=0x00; E11=1; E12=1;
 575   3                              P2=0x00;
 576   3                              P0=led7_data[Data%10];//xuat gia tri hang don vi
 577   3                              E11=0;E12=1;
 578   3                      }
 579   2                      if(index==2)
 580   2                      {
 581   3                              P0=0x00; E11=1; E12=1;
 582   3                              P2=0x01;
 583   3                              P0=led7_data[Data/10]; //xuat gia tri hang truc
 584   3                              E11=0;E12=1;
 585   3                      }
 586   2              //******************************************************************************
 587   2                      if(index==3)
 588   2                      {
 589   3                              Data=min;
 590   3                              P0=0x00; E11=1; E12=1;
 591   3                              if(set==1 && bat_nhay==1){ index++; index++; }
 592   3                              else
 593   3                              {
 594   4                                      P2=0x02;
 595   4                                      P0=led7_data[Data%10];
 596   4                                      E11=0;E12=1;
 597   4                              }
 598   3                      }
 599   2                      if(index==4)
 600   2                      {
 601   3                              P0=0x00; E11=1; E12=1;
 602   3                              P2=0x03;
 603   3                              P0=led7_data[Data/10];
 604   3                              E11=0;E12=1; 
 605   3                      }
 606   2              //******************************************************************************
 607   2                      if(index==5)
 608   2                      {
 609   3                              if(AM_PM==1) 
 610   3                              {
 611   4                                      if(hour>12) Data=hour-12;
 612   4                                      else 
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 11  

 613   4                                      {
 614   5                                              if(hour==0) Data=12;
 615   5                                              else Data=hour;
 616   5                                      }
 617   4                              }
 618   3                              else Data=hour;
 619   3                              P0=0x00; E11=1; E12=1;
 620   3                              if(set==2 && bat_nhay==1){ index++; index++; }
 621   3                              else
 622   3                              { 
 623   4                                      P2=0x04;
 624   4                                      P0=led7_data[Data%10];
 625   4                                      E11=0;E12=1;
 626   4                              }
 627   3                      }
 628   2                      if(index==6)
 629   2                      {       
 630   3                              P0=0x00; E11=1; E12=1;
 631   3                              P2=0x05;
 632   3                              P0=led7_data[Data/10]; 
 633   3                              E11=0;E12=1;
 634   3                      } 
 635   2              //******************************************************************************
 636   2                      if(index==7) 
 637   2                      {
 638   3                              if ((day<8)&&(day>1)) Data=day;
 639   3                              else if (day==1) Data=10;
 640   3                              P0=0x00; E11=1; E12=1;
 641   3                              if(set==3 && bat_nhay==1){ index++; }
 642   3                              else
 643   3                              {       
 644   4                                              P2=0x06;
 645   4                                              P0=led7_data[Data];
 646   4                                              E11=0;E12=1;
 647   4                              }
 648   3                      }
 649   2              //******************************************************************************
 650   2                      if(index==8)
 651   2                      {
 652   3                              Data=date;
 653   3                              P0=0x00; E11=1; E12=1;
 654   3                              if(set==4 && bat_nhay==1){ index++; index++; }
 655   3                              else
 656   3                              {
 657   4                                  P2=0x07;
 658   4                                      P0=led7_data[Data/10];
 659   4                                      E11=0; E12=1;
 660   4                              }
 661   3                      }
 662   2                      if(index==9)
 663   2                      {
 664   3                              P0=0x00; E11=1; E12=1;
 665   3                              P2=0x08;
 666   3                              P0=led7_data[Data%10];
 667   3                              E11=0; E12=1;
 668   3                      }
 669   2              //******************************************************************************
 670   2                      if(index==10)
 671   2                      {
 672   3                              Data=month;
 673   3                              P0=0x00; E11=1; E12=1;
 674   3                              if(set==5 && bat_nhay==1){ index++; index++; }
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 12  

 675   3                              else
 676   3                              {
 677   4                                      P2=0x09;
 678   4                                      P0=led7_data[Data/10];
 679   4                                      E11=0; E12=1;
 680   4                              }
 681   3                      }
 682   2                      if(index==11)
 683   2                      {
 684   3                              P0=0x00; E11=1; E12=1;
 685   3                              P2=0x0a;
 686   3                              P0=led7_data[Data%10];
 687   3                              E11=0; E12=1;
 688   3                      }
 689   2              //******************************************************************************
 690   2                      if(index==12)
 691   2                      {
 692   3                              Data=year_20;
 693   3                              P0=0x00; E11=1; E12=1;
 694   3                              if(set==6 && bat_nhay==3){ index++; index++; index++; index++; }
 695   3                              else
 696   3                              {
 697   4                                      P2=0x0b;
 698   4                                      P0=led7_data[Data/10];
 699   4                                      E11=0;E12=1;
 700   4                              }
 701   3                      }
 702   2                      if(index==13)
 703   2                      {
 704   3                              P0=0x00; E11=1; E12=1;
 705   3                              P2=0x0c;
 706   3                              P0=led7_data[Data%10];
 707   3                              E11=0; E12=1;
 708   3                      }
 709   2                      if(index==14)
 710   2                      {
 711   3                              Data=year;
 712   3                              P0=0x00; E11=1; E12=1;
 713   3                              P2=0x0d;
 714   3                              P0=led7_data[Data/10];
 715   3                              E11=0; E12=1;
 716   3                      }
 717   2                      if(index==15)
 718   2                      {
 719   3                              P0=0x00; E11=1; E12=1;
 720   3                              P2=0x0e;
 721   3                              P0=led7_data[Data%10];
 722   3                              E11=0; E12=1;
 723   3                      }
 724   2                      if(index==16)
 725   2                      {
 726   3                              Data=DATEAL;
 727   3                              P0=0x00; E11=1; E12=1;
 728   3                              P2=0x00;
 729   3                              P0=led7_data[Data/10];//xuat gia tri hang don vi
 730   3                              E11=1;E12=0;
 731   3                      }
 732   2                      if(index==17)
 733   2                      {
 734   3                              P0=0x00; E11=1; E12=1;
 735   3                              P2=0x10;
 736   3                              P0=led7_data[Data%10]; //xuat gia tri hang truc
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 13  

 737   3                              E11=1;E12=0;
 738   3                      }
 739   2              //******************************************************************************
 740   2                      if(index==18)
 741   2                      {
 742   3                              Data=MONTHAL;
 743   3                              P0=0x00; E11=1; E12=1;
 744   3                              P2=0x20;
 745   3                              P0=led7_data[Data/10];
 746   3                              E11=1;E12=0;
 747   3                              
 748   3                      }
 749   2                      if(index==19)
 750   2                      {
 751   3                              P0=0x00; E11=1; E12=1;
 752   3                              P2=0x30;
 753   3                              P0=led7_data[Data%10];
 754   3                              E11=1;E12=0; 
 755   3                      }
 756   2              //******************************************************************************
 757   2                      if(index==20)
 758   2                      {
 759   3                          Data=yearal_20;
 760   3                              P0=0x00; E11=1; E12=1;
 761   3                              P2=0x40;
 762   3                              P0=led7_data[Data/10];
 763   3                              E11=1;E12=0;
 764   3                      }
 765   2                      if(index==21)
 766   2                      {       
 767   3                              P0=0x00; E11=1; E12=1;
 768   3                              P2=0x50;
 769   3                              P0=led7_data[Data%10]; 
 770   3                              E11=1;E12=0;
 771   3                      } 
 772   2              //******************************************************************************
 773   2                      if(index==22) 
 774   2                      {
 775   3                              Data=YEARAL;
 776   3                              P0=0x00; E11=1; E12=1;
 777   3                              P2=0x60;
 778   3                              P0=led7_data[Data/10];
 779   3                              E11=1;E12=0;
 780   3                      }
 781   2              //******************************************************************************
 782   2                      if(index==23)
 783   2                      {
 784   3                              P0=0x00; E11=1; E12=1;
 785   3                              P2=0x70;
 786   3                              P0=led7_data[Data%10];
 787   3                              E11=1;E12=0;
 788   3                      }
 789   2                      if(index==24) index=0;
 790   2              }
 791   1              
 792   1              if(Display==1)
 793   1              {
 794   2                      index++;
 795   2                      if(index==1)
 796   2                      {
 797   3                              Data=sec;
 798   3                              P0=0x00; E11=1; E12=1;
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 14  

 799   3                              P2=0x00;
 800   3                              P0=led7_data[Data%10];//xuat gia tri hang don vi
 801   3                              E11=0; E12=1;
 802   3                      }
 803   2                      if(index==2)
 804   2                      {
 805   3                              P0=0x00; E11=1; E12=1;
 806   3                              P2=0x01;
 807   3                              P0=led7_data[Data/10]; //xuat gia tri hang truc
 808   3                              E11=0; E12=1;
 809   3                      }
 810   2              //******************************************************************************
 811   2                      if(index==3)
 812   2                      {
 813   3                              Data=min;
 814   3                              P0=0x00; E11=1; E12=1;
 815   3                              if(set==1 && bat_nhay==1){ index++; index++; }
 816   3                              else
 817   3                              {
 818   4                                      P2=0x02;
 819   4                                      P0=led7_data[Data%10];
 820   4                                      E11=0; E12=1;
 821   4                              }
 822   3                      }
 823   2                      if(index==4)
 824   2                      {
 825   3                              P0=0x00; E11=1; E12=1;
 826   3                              P2=0x03;
 827   3                              P0=led7_data[Data/10]; 
 828   3                              E11=0; E12=1;
 829   3                      }
 830   2              //******************************************************************************
 831   2                      if(index==5)
 832   2                      {
 833   3                              if(AM_PM==1) 
 834   3                              {
 835   4                                      if(hour>12) Data=hour-12;
 836   4                                      else 
 837   4                                      {
 838   5                                              if(hour==0) Data=12;
 839   5                                              else Data=hour;
 840   5                                      }
 841   4                              }
 842   3                              else Data=hour;
 843   3                              P0=0x00; E11=1; E12=1;
 844   3                              if(set==2 && bat_nhay==1){ index++; index++; }
 845   3                              else
 846   3                              { 
 847   4                                      P2=0x04;
 848   4                                      P0=led7_data[Data%10];
 849   4                                      E11=0; E12=1;
 850   4                              }
 851   3                      }
 852   2                      if(index==6)
 853   2                      {       
 854   3                              P0=0x00; E11=1; E12=1;
 855   3                              P2=0x05;
 856   3                              P0=led7_data[Data/10];
 857   3                              E11=0; E12=1; 
 858   3                      } 
 859   2                      if(index==7)
 860   2                      {
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 15  

 861   3                              P0=0x00; E11=1; E12=1;
 862   3                              P2=0x06;
 863   3                              P0=led7_data[1];
 864   3                              E11=0; E12=1;
 865   3                      }
 866   2                      if(index==8)
 867   2                      {
 868   3                              Data=a_min;
 869   3                              if(alarm==1 && bat_nhay==1){ index++; index++; }
 870   3                              else
 871   3                              {
 872   4                                      P0=0x00; E11=1; E12=1;
 873   4                                      P2=0x0a;
 874   4                                      P0=led7_data[Data%10];
 875   4                                      E11=0; E12=1;
 876   4                              }
 877   3                      }
 878   2                      if(index==9)
 879   2                      {
 880   3                              P0=0x00; E11=1; E12=1;
 881   3                              P2=0x09;
 882   3                              P0=led7_data[Data/10];
 883   3                              E11=0;E12=1;
 884   3                      }
 885   2                      if(index==10)
 886   2                      {
 887   3                              if(AM_PM==1) 
 888   3                              {
 889   4                                      if(a_hour>12) Data=a_hour-12;
 890   4                                      else 
 891   4                                      {
 892   5                                              if(a_hour==0) Data=12;
 893   5                                              else Data=a_hour;
 894   5                                      }
 895   4                              }
 896   3                              else Data=a_hour;
 897   3                              if(alarm==2 && bat_nhay==1){ index++; index++; }
 898   3                              else
 899   3                              {
 900   4                                      P0=0x00; E11=1; E12=1;
 901   4                                      P2=0x08;;
 902   4                                      P0=led7_data[Data%10];
 903   4                                      E11=0;E12=1;
 904   4                              }
 905   3                      }
 906   2                      if(index==11)
 907   2                      {
 908   3                              P0=0x00; E11=1; E12=1;
 909   3                              P2=0x07;
 910   3                              P0=led7_data[Data/10];
 911   3                              E11=0;E12=1;
 912   3                      }
 913   2                      if(index==12)
 914   2                      {
 915   3                              P0=0x00; E11=1; E12=1;
 916   3                              if(alarm==3 && bat_nhay==2){ index++; index++; index++; index++; }
 917   3                              else
 918   3                              {
 919   4                                      P2=0x0c;
 920   4                                      P0=led7_data[0];
 921   4                                      E11=0;E12=1;
 922   4                              }
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 16  

 923   3                      }
 924   2                      if(index==13)
 925   2                      {
 926   3                              P0=0x00; E11=1; E12=1;
 927   3                              if(on_off==1)
 928   3                              {
 929   4                                      P2=0x0d;
 930   4                                      P0=0x37;
 931   4                                      E11=0;E12=1;    
 932   4                              }
 933   3                              else 
 934   3                              {
 935   4                                      P2=0x0d;
 936   4                                      P0=0x71;
 937   4                                      E11=0;E12=1;
 938   4                              }
 939   3                      }
 940   2                      if(index==14)
 941   2                      {
 942   3                              P0=0x00; E11=1; E12=1;
 943   3                              if(on_off==1)
 944   3                              {
 945   4                                      P2=0x0e;
 946   4                                      P0=0x00;
 947   4                                      E11=0;E12=1;    
 948   4                              }
 949   3                              else 
 950   3                              {
 951   4                                      P2=0x0e;
 952   4                                      P0=0x71;
 953   4                                      E11=0;E12=1;
 954   4                              }
 955   3                      }
 956   2                      if(index==15)
 957   2                      {
 958   3                              P0=0x00; E11=1; E12=1;
 959   3                              if(a_hour>12)
 960   3                              {
 961   4                                      P2=0x0b;
 962   4                                      P0=0x40;
 963   4                                      E11=0;E12=1;    
 964   4                              }
 965   3                              else 
 966   3                              {
 967   4                                      P2=0x0b;
 968   4                                      P0=0x00;
 969   4                                      E11=0;E12=1;
 970   4                              }
 971   3                      }
 972   2                      if(index==16)
 973   2                      {
 974   3                              Data=DATEAL;
 975   3                              P0=0x00; E11=1; E12=1;
 976   3                              P2=0x00;
 977   3                              P0=led7_data[Data/10];//xuat gia tri hang don vi
 978   3                              E11=1;E12=0;
 979   3                      }
 980   2                      if(index==17)
 981   2                      {
 982   3                              P0=0x00; E11=1; E12=1;
 983   3                              P2=0x10;
 984   3                              P0=led7_data[Data%10]; //xuat gia tri hang truc
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 17  

 985   3                              E11=1;E12=0;
 986   3                      }
 987   2              //******************************************************************************
 988   2                      if(index==18)
 989   2                      {
 990   3                              Data=MONTHAL;
 991   3                              P0=0x00; E11=1; E12=1;
 992   3                              P2=0x20;
 993   3                              P0=led7_data[Data/10];
 994   3                              E11=1;E12=0;
 995   3                              
 996   3                      }
 997   2                      if(index==19)
 998   2                      {
 999   3                              P0=0x00; E11=1; E12=1;
1000   3                              P2=0x30;
1001   3                              P0=led7_data[Data%10]; 
1002   3                              E11=1;E12=0;
1003   3                      }
1004   2              //******************************************************************************
1005   2                      if(index==20)
1006   2                      {
1007   3                          Data=yearal_20;
1008   3                              P0=0x00; E11=1; E12=1;
1009   3                              P2=0x40;
1010   3                              P0=led7_data[Data/10];
1011   3                              E11=1;E12=0;
1012   3                      }
1013   2                      if(index==21)
1014   2                      {       
1015   3                              P0=0x00; E11=1; E12=1;
1016   3                              P2=0x50;
1017   3                              P0=led7_data[Data%10]; 
1018   3                              E11=1;E12=0;
1019   3                      } 
1020   2              //******************************************************************************
1021   2                      if(index==22) 
1022   2                      {
1023   3                              Data=YEARAL;
1024   3                              P0=0x00; E11=1; E12=1;
1025   3                              P2=0x60;
1026   3                              P0=led7_data[Data/10];
1027   3                              E11=1;E12=0;
1028   3                      }
1029   2              //******************************************************************************
1030   2                      if(index==23)
1031   2                      {
1032   3                              P0=0x00; E11=1; E12=1;
1033   3                              P2=0x70;
1034   3                              P0=led7_data[Data%10];
1035   3                              E11=1;E12=0;
1036   3                      }
1037   2                      if(index==24) index=0;
1038   2              }
1039   1              if(Display==2)
1040   1              {
1041   2                      index++;
1042   2                      if(index==1)
1043   2                      {
1044   3                              Data=sec;
1045   3                              P0=0x00; E11=1; E12=1;
1046   3                              P2=0x00;;
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 18  

1047   3                              P0=led7_data[Data%10];//xuat gia tri hang don vi
1048   3                              E11=0;E12=1;
1049   3                      }
1050   2                      if(index==2)
1051   2                      {
1052   3                              P0=0x00; E11=1; E12=1;
1053   3                              P2=0x01;
1054   3                              P0=led7_data[Data/10]; //xuat gia tri hang truc
1055   3                              E11=0;E12=1;
1056   3                      }
1057   2              //******************************************************************************
1058   2                      if(index==3)
1059   2                      {
1060   3                              Data=min;
1061   3                              P0=0x00; E11=1; E12=1;
1062   3                              if(set==1 && bat_nhay==1){ index++; index++; }
1063   3                              else
1064   3                              {
1065   4                                      P2=0x02;
1066   4                                      P0=led7_data[Data%10];
1067   4                                      E11=0;E12=1;
1068   4                              }
1069   3                      }
1070   2                      if(index==4)
1071   2                      {
1072   3                              P0=0x00; E11=1; E12=1;
1073   3                              P2=0x03;
1074   3                              P0=led7_data[Data/10];
1075   3                              E11=0;E12=1; 
1076   3                      }
1077   2              //******************************************************************************
1078   2                      if(index==5)
1079   2                      {
1080   3                              if(AM_PM==1) 
1081   3                              {
1082   4                                      if(hour>12) Data=hour-12;
1083   4                                      else 
1084   4                                      {
1085   5                                              if(hour==0) Data=12;
1086   5                                              else Data=hour;
1087   5                                      }
1088   4                              }
1089   3                              else Data=hour;
1090   3                              P0=0x00; E11=1; E12=1;
1091   3                              if(set==2 && bat_nhay==1){ index++; index++; }
1092   3                              else
1093   3                              { 
1094   4                                      P2=0x04;
1095   4                                      P0=led7_data[Data%10];
1096   4                                      E11=0; E12=1;
1097   4                              }
1098   3                      }
1099   2                      if(index==6)
1100   2                      {       
1101   3                              P0=0x00; E11=1; E12=1;
1102   3                              P2=0x05;
1103   3                              P0=led7_data[Data/10]; 
1104   3                              E11=0; E12=1;
1105   3                      } 
1106   2                      if(index==7)
1107   2                      {
1108   3                              P0=0x00; E11=1; E12=1;
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 19  

1109   3                              P2=0x06;
1110   3                              P0=led7_data[2];
1111   3                              E11=0; E12=1;
1112   3                      }
1113   2                      if(index==8)
1114   2                      {
1115   3                              Data=a_min1;
1116   3                              if(alarm1==1 && bat_nhay==1){ index++; index++; }
1117   3                              else
1118   3                              {
1119   4                                      P0=0x00; E11=1; E12=1;
1120   4                                  P2=0x0a;
1121   4                                      P0=led7_data[Data%10];
1122   4                                      E11=0; E12=1;
1123   4                              }
1124   3                      }
1125   2                      if(index==9)
1126   2                      {
1127   3                              P0=0x00; E11=1; E12=1;
1128   3                              P2=0x09;
1129   3                              P0=led7_data[Data/10];
1130   3                              E11=0; E12=1;
1131   3                      }
1132   2                      if(index==10)
1133   2                      {
1134   3                              if(AM_PM==1) 
1135   3                              {
1136   4                                      if(a_hour1>12) Data=a_hour1-12;
1137   4                                      else 
1138   4                                      {
1139   5                                              if(a_hour1==0) Data=12;
1140   5                                              else Data=a_hour1;
1141   5                                      }
1142   4                              }
1143   3                              else Data=a_hour1;
1144   3                              if(alarm1==2 && bat_nhay==1){ index++; index++; }
1145   3                              else
1146   3                              {
1147   4                                      P0=0x00; E11=1; E12=1;
1148   4                                      P2=0x08;
1149   4                                      P0=led7_data[Data%10];
1150   4                                      E11=0; E12=1;
1151   4                              }
1152   3                      }
1153   2                      if(index==11)
1154   2                      {
1155   3                              P0=0x00; E11=1; E12=1;
1156   3                              P2=0x07;
1157   3                              P0=led7_data[Data/10];
1158   3                              E11=0; E12=1;
1159   3                      }
1160   2                      if(index==12)
1161   2                      {
1162   3                              P0=0x00; E11=1; E12=1;
1163   3                              if(alarm1==3 && bat_nhay==2){ index++; index++; index++; index++; }
1164   3                              else
1165   3                              {
1166   4                                      P2=0x0c;
1167   4                                      P0=led7_data[0];
1168   4                                      E11=0; E12=1;
1169   4                              }
1170   3                      }
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 20  

1171   2                      if(index==13)
1172   2                      {
1173   3                              P0=0x00; E11=1; E12=1;
1174   3                              if(on_off1==1)
1175   3                              {
1176   4                                      P2=0x0d;
1177   4                                      P0=0x37;
1178   4                                      E11=0; E12=1;   
1179   4                              }
1180   3                              else 
1181   3                              {
1182   4                                      P2=0x0d;
1183   4                                      P0=0x71;
1184   4                                      E11=0; E12=1;
1185   4                              }
1186   3                      }
1187   2                      if(index==14)
1188   2                      {
1189   3                              P0=0x00; E11=1; E12=1;
1190   3                              if(on_off1==1)
1191   3                              {
1192   4                                      P2=0x0e;
1193   4                                      P0=0x00;
1194   4                                      E11=0; E12=1;   
1195   4                              }
1196   3                              else 
1197   3                              {
1198   4                                      P2=0x0e;
1199   4                                      P0=0x71;
1200   4                                      E11=0; E12=1;
1201   4                              }
1202   3                      }
1203   2                      if(index==15)
1204   2                      {
1205   3                              P0=0x00; E11=1; E12=1;
1206   3                              if(a_hour1>12)
1207   3                              {
1208   4                                      P2=0x0b;
1209   4                                      P0=0x40;
1210   4                                      E11=0; E12=1;   
1211   4                              }
1212   3                              else 
1213   3                              {
1214   4                                      P2=0x0b;
1215   4                                      P0=0x00;
1216   4                                      E11=0; E12=1;
1217   4                              }
1218   3                      }
1219   2                      if(index==16)
1220   2                      {
1221   3                              Data=DATEAL;
1222   3                              P0=0x00; E11=1; E12=1;
1223   3                              P2=0x00;
1224   3                              P0=led7_data[Data/10];//xuat gia tri hang don vi
1225   3                              E11=1;E12=0;
1226   3                      }
1227   2                      if(index==17)
1228   2                      {
1229   3                              P0=0x00; E11=1; E12=1;
1230   3                              P2=0x10;
1231   3                              P0=led7_data[Data%10]; //xuat gia tri hang truc
1232   3                              E11=1;E12=0;
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 21  

1233   3                      }
1234   2              //******************************************************************************
1235   2                      if(index==18)
1236   2                      {
1237   3                              Data=MONTHAL;
1238   3                              P0=0x00; E11=1; E12=1;
1239   3                              P2=0x20;
1240   3                              P0=led7_data[Data/10];
1241   3                              E11=1;E12=0;
1242   3                              
1243   3                      }
1244   2                      if(index==19)
1245   2                      {
1246   3                              P0=0x00; E11=1; E12=1;
1247   3                              P2=0x30;
1248   3                              P0=led7_data[Data%10]; 
1249   3                              E11=1;E12=0;
1250   3                      }
1251   2              //******************************************************************************
1252   2                      if(index==20)
1253   2                      {
1254   3                          Data=yearal_20;
1255   3                              P0=0x00; E11=1; E12=1;
1256   3                              P2=0x40;
1257   3                              P0=led7_data[Data/10];
1258   3                              E11=1;E12=0;
1259   3                      }
1260   2                      if(index==21)
1261   2                      {       
1262   3                              P0=0x00; E11=1; E12=1;
1263   3                              P2=0x50;
1264   3                              P0=led7_data[Data%10]; 
1265   3                              E11=1;E12=0;
1266   3                      } 
1267   2              //******************************************************************************
1268   2                      if(index==22) 
1269   2                      {
1270   3                              Data=YEARAL;
1271   3                              P0=0x00; E11=1; E12=1;
1272   3                              P2=0x60;
1273   3                              P0=led7_data[Data/10];
1274   3                              E11=1;E12=0;
1275   3                      }
1276   2              //******************************************************************************
1277   2                      if(index==23)
1278   2                      {
1279   3                              P0=0x00; E11=1; E12=1;
1280   3                              P2=0x70;
1281   3                              P0=led7_data[Data%10];
1282   3                              E11=1;E12=0;
1283   3                      }
1284   2                      if(index==24) index=0;
1285   2              }
1286   1              
1287   1      //******************************************************************************
1288   1              TR1=1;
1289   1      }
1290          //************ CHUONG TRINH CHINH *************
1291          void main()
1292          {       Out_1Hz();
1293   1          time=index=set=read_time=0;
1294   1              bip(); 
C51 COMPILER V9.01   LICH_VAN_NIEN_1                                                       11/10/2014 17:03:32 PAGE 22  

1295   1              delay(100);
1296   1              set_main();
1297   1              year_20=20;
1298   1              yearal_20=20;
1299   1              setup_timer();
1300   1              Read_Alarm();
1301   1              Read_DS1307();
1302   1              DS1307_Write(SEC,0x00);
1303   1              while(1)
1304   1              {   
1305   2                  
1306   2                      if ((year>9)&&(year<26)) 
1307   2                      {
1308   3                      year_20=yearal_20=20;
1309   3                      DATEAL=DATE_AL(date,month,year);
1310   3              MONTHAL=MONTH_AL(date,month,year);
1311   3                  YEARAL=YEAR_AL(MONTHAL,month); }
1312   2                      else
1313   2                      {DATEAL=MONTHAL=YEARAL=yearal_20=0; }
1314   2                      Keypad();
1315   2                      if(hour>=12)  {AM=1; PM=0; delay(100);}
1316   2                      else {AM=0; PM=1; delay(100); }
1317   2                      if((set==0)&&(read_time==1))
1318   2            {
1319   3              if ((hour==12)&&(min==0)&&(sec==0))
1320   3                       {read_time = 0;
1321   4                    Read_DS1307();
1322   4                                DS1307_Write(SEC,0x0a);}
1323   3                          else 
1324   3                              { read_time = 0;
1325   4                    Read_DS1307();}
1326   3            }
1327   2                      else sec = DS1307_read(SEC); 
1328   2                      if(((a_min==min)&&(a_hour==hour)&&(on_off==1)))
1329   2                      {
1330   3                              if(sec<59) { bip(); delay(50000);}
1331   3                              else on_off=0;
1332   3                      }
1333   2                      if((a_min1==min)&&(a_hour1==hour)&&((day>1)&&(day<7))&&(on_off1==1))
1334   2                      {
1335   3                              if(sec<59) { bip(); delay(50000);}
1336   3                      }
1337   2              }
1338   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6089    ----
   CONSTANT SIZE    =    528    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
